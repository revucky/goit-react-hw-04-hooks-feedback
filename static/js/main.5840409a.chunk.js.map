{"version":3,"sources":["components/Feedback/Title.module.css","components/Feedback/FeedbackOptions.js","services/Statistics.jsx","services/Notification.jsx","services/Section.jsx","components/Feedback/Feedback.jsx","components/App/App.jsx","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","className","id","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Section","title","children","s","Title","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKACAA,EAAOC,QAAU,CAAC,MAAQ,uB,0JCgCXC,EA9BS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,gCACE,wBACEC,UAAU,UACVC,GAAG,OACHC,KAAK,SACLC,QAASJ,EAJX,kBAQA,wBACEC,UAAU,aACVC,GAAG,UACHC,KAAK,SACLC,QAASJ,EAJX,qBAQA,wBACEC,UAAU,SACVC,GAAG,MACHC,KAAK,SACLC,QAASJ,EAJX,qBCUSK,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKT,UAAU,WAAf,UACE,uCACQ,+BAAOK,OAGf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,wCACS,+BAAOC,OAEhB,mDAEE,iCAAOC,EAAP,eCJOC,G,WAXa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,qBAAKX,UAAU,WAAf,SACE,4BAAIW,Q,gBCIKC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAId,UAAWe,IAAEC,MAAjB,SAAyBH,IACxBC,MCoGQG,G,MApGE,WACf,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOX,EAAP,KAAYc,EAAZ,KAkBMC,EAAqB,WACzB,OAAOjB,EAAOC,EAAUC,GAQ1B,OACE,sBAAKP,UAAU,OAAf,UACE,cAAC,EAAD,CAASa,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBd,gBA5BH,SAACwB,GACnB,OAAQA,EAAEC,OAAOvB,IACf,IAAK,OACHkB,EAAQd,EAAO,GACf,MACF,IAAK,UACHe,EAAWd,EAAU,GACrB,MACF,IAAK,MACHe,EAAOd,EAAM,GACb,MACF,QACE,aAkBF,cAAC,EAAD,CAASM,MAAM,aAAf,SACGS,IACC,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,IACPb,mBAjBDa,IACHG,KAAKC,MAAOrB,EAAOiB,IAAwB,KAC3C,IAkBE,cAAC,EAAD,CAAcX,QAAQ,gCCxCjBgB,EAVH,WACV,OACE,8BACE,mCACE,cAAC,EAAD,S,MCDRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5840409a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__2kybr\"};","import React from \"react\";\nimport \"./Buttons.css\";\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\n  return (\n    <div>\n      <button\n        className=\"Button \"\n        id=\"good\"\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        good\n      </button>\n      <button\n        className=\"Button btn\"\n        id=\"neutral\"\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        neutral\n      </button>\n      <button\n        className=\"Button\"\n        id=\"bad\"\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        bad\n      </button>\n    </div>\n  );\n};\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className=\"subtitle\">\n      <p>\n        Good: <span>{good}</span>\n      </p>\n\n      <p>\n        Neutral: <span>{neutral}</span>\n      </p>\n      <p>\n        Bad: <span>{bad}</span>\n      </p>\n      <p>\n        Total: <span>{total}</span>\n      </p>\n      <p>\n        Positive feedback:\n        <span>{positivePercentage} %</span>\n      </p>\n    </div>\n  );\n};\n\n// Statistics.propTypes = {\n//   good: PropTypes.number,\n//   neutral: PropTypes.number,\n//   bad: PropTypes.number,\n// };\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport \"../styles/Notificate.css\";\nimport \"../styles/Notificate.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const Notification = ({ message }) => {\n  return (\n    <div className=\"subtitle\">\n      <p>{message}</p>\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Notification;\n","import React from \"react\";\nimport s from \"../components/Feedback/Title.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2 className={s.Title}>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nexport default Section;\n","import { useState } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"../../services/Statistics\";\nimport Notification from \"../../services/Notification\";\nimport Section from \"../../services/Section\";\nimport \"./Feedback.css\";\n\nconst Feedback = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = (e) => {\n    switch (e.target.id) {\n      case \"good\":\n        setGood(good + 1);\n        break;\n      case \"neutral\":\n        setNeutral(neutral + 1);\n        break;\n      case \"bad\":\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return countTotalFeedback()\n      ? Math.round((good / countTotalFeedback()) * 100)\n      : 0;\n  };\n\n  return (\n    <div className=\"form\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={handleClick} />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Section>\n    </div>\n  );\n};\n\n// class Feedback extends React.Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   handleClick = (e) => {\n//     const name = e.target.id;\n//     this.setState((prevState) => {\n//       return {\n//         [name]: prevState[name] + 1,\n//       };\n//     });\n//   };\n//   countTotalFeedback = () => {\n//     return this.state.good + this.state.neutral + this.state.bad;\n//   };\n//   countPositiveFeedbackPercentage = () => {\n//     return this.countTotalFeedback()\n//       ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n//       : 0;\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions onLeaveFeedback={this.handleClick} />\n//         </Section>\n//         <Section title=\"Statistics\">\n//           {this.countTotalFeedback() ? (\n//             <Statistics\n//               good={this.state.good}\n//               neutral={this.state.neutral}\n//               bad={this.state.bad}\n//               total={this.countTotalFeedback()}\n//               positivePercentage={this.countPositiveFeedbackPercentage()}\n//             />\n//           ) : (\n//             <Notification message=\"There is no feedback\" />\n//           )}\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n\nexport default Feedback;\n","import Feedback from \"../Feedback/Feedback\";\n\nconst App = () => {\n  return (\n    <div>\n      <>\n        <Feedback />\n      </>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}